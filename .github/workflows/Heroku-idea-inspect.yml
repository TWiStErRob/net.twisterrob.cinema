name: "🔍 IntelliJ IDEA Inspections"
on:
  workflow_call

jobs:

  inspect:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    permissions:
      # actions/checkout
      contents: read

    steps:

      - name: "Install IntelliJ IDEA"
        run: |
          # For available versions see
          # * snap info intellij-idea-community
          # * https://snapcraft.io/intellij-idea-community top right corner
          sudo snap install --classic intellij-idea-community --channel=2023.2/stable
          #snap refresh --hold intellij-idea-community

      - name: "Set up JDK 17."
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4

      - name: "Pre-load Gradle caches before syncing in IDEA."
        working-directory: Heroku
        run: >
          ./gradlew
          --no-daemon

      - name: "Inspect project."
        working-directory: Heroku
        run: >
          intellij-idea-community
          inspect
          ${PWD}/gradle/plugins
          -e
          build/reports/inspect
          -v2
          -format json

      - name: "Upload 'Inspection Results' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'Inspection Results'
          path: |
            ${{ github.workspace }}/Heroku/gradle/plugins/.idea/
            ${{ github.workspace }}/Heroku/build/reports/inspect/

  qodana:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    permissions:
      contents: read
      checks: write

    steps:

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4
        with:
          # To check out the actual pull request commit, not the merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0 # a full history is required for pull request analysis

      - name: "Scan with Qodana."
        uses: JetBrains/qodana-action@v2023.2
        # https://www.jetbrains.com/help/qodana/github.html#Configuration
        with:
          # https://github.com/jetbrains/qodana-cli#scan
          args: --project-dir,Heroku/gradle/plugins
          pr-mode: false
          post-pr-comment: false
          upload-result: true
          use-caches: false
          #cache-default-branch-only: true
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
