# To use this configuration, deploy it into your application's WEB-INF/classes directory.
# And provide -Dlog4j.configuration=WEB-INF\classes\log4j-debug.properties to the JVM

# org.slf4j.bridge.SLF4JBridgeHandler is registered in src/main/webapp/WEB-INF/java.util.logging.properties
# Bridge/route all JUL log records to the SLF4J API.
# J.U.L.  -> Log4J
# ALL     -> ALL
# FINEST  -> TRACE
# FINER   -> DEBUG
# FINE    -> DEBUG
# INFO    -> INFO
# WARNING -> WARN
# SEVERE  -> ERROR
#         -> FATAL
#         -> OFF

log4j.rootLogger=ALL, console

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c(%F:%L) %m%n

# tighten logging on the DataNucleus Categories
log4j.category.DataNucleus.JDO=WARN
log4j.category.DataNucleus.Persistence=WARN
log4j.category.DataNucleus.Cache=WARN
log4j.category.DataNucleus.MetaData=WARN
log4j.category.DataNucleus.General=WARN
log4j.category.DataNucleus.Utility=WARN
log4j.category.DataNucleus.Transaction=WARN
log4j.category.DataNucleus.Datastore=WARN
log4j.category.DataNucleus.ClassLoading=WARN
log4j.category.DataNucleus.Plugin=WARN
log4j.category.DataNucleus.ValueGeneration=WARN
log4j.category.DataNucleus.Enhancer=WARN
log4j.category.DataNucleus.SchemaTool=WARN
log4j.category.DataNucleus.Connection=WARN
log4j.category.DataNucleus.Lifecycle=WARN
log4j.category.DataNucleus.Query=WARN

# tighten spamming logs

# DEBUG GAE Development server logs about all loaded files (jar, tld, ...)
log4j.category.JettyLogger(null)=INFO
# INFO Jersey Application startup (Root Resource Classes, Global Reader Interceptors, Global Writer Interceptors, Message Body Readers, Message Body Writers)
log4j.category.org.glassfish.jersey.server.ApplicationHandler=WARN
# TRACE A new abstract resource created by IntrospectionModeler: org.glassfish.jersey.server.model.Resource$Builder@13bd913
log4j.category.org.glassfish.jersey.server.model.IntrospectionModeller=DEBUG
# To determine "Running in a non-OSGi environment" it logs an exception:
# DEBUG Unable to load class org.osgi.framework.BundleReference using the current class loader. java.lang.ClassNotFoundException: org.osgi.framework.BundleReference
log4j.category.org.glassfish.jersey.internal.util.ReflectionHelper=INFO
# DEBUG Unable to get the $Proxy17 annotation value property java.lang.NoSuchMethodException: javax.inject.Inject.value()
log4j.category.org.glassfish.jersey.server.model.Parameter=INFO
# TRACE Loading next object: org.glassfish.jersey.*AutoDiscoverable
log4j.category.org.glassfish.jersey.internal.ServiceFinder=DEBUG
# DEBUG Rolled forward 1 of 1 jobs for Element {...}
log4j.category.com.google.appengine.api.datastore.dev.LocalDatastoreService=INFO
# DEBUG constant pool count: 673; 16 read class attr -- '_005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest'
log4j.category.org.apache.jasper.compiler.SmapUtil$SDEInstaller=INFO
# DEBUG authenticate() returning new principal for test@example.com; Ignoring disassociate call for: test@example.com
log4j.category.com.google.apphosting.utils.jetty.AppEngineAuthentication=INFO
# TODO why?
log4j.category.com.google.appengine.repackaged.org.apache.http=WARN

log4j.category.com.twister.gapp.cinema=ALL
